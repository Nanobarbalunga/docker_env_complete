version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: config/docker-web/Dockerfile
    image: nano-docker-web:1.1 
    container_name: web-${CONTAINER_NAMESPACE:-env}
    ports:
       - "${WEB_PORT:-8080}:80"
    volumes:
      - ./app:/var/www/html
      - ./config/docker-web/apache:/etc/apache2/custom-conf
      - ./config/docker-web/php:/usr/local/etc/php
    depends_on:
      - db
      - redis
      - mailhog
    networks:
      - app-network

  db:
    image: mariadb:10.11
    container_name: db-${CONTAINER_NAMESPACE:-env}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app_db}
      MYSQL_USER: ${MYSQL_USER:-app_user} 
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_pass}
    volumes:
      - ./data/db:/var/lib/mysql
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin-${CONTAINER_NAMESPACE:-env}
    environment:
      PMA_HOST: db
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - db
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis-${CONTAINER_NAMESPACE:-env}
    volumes:
      - ./data/redis:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog-${CONTAINER_NAMESPACE:-env}
    ports:
      - "${MAILHOG_UI_PORT:-8025}:8025"
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
